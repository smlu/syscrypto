#pragma once
#include "../platform.h"

#ifdef SC_PLATFORM_OS_WINDOWS
#   include "windows/win_skc.h"
#else
#   error "Secret key cryptography is not defined for target platform!"
#endif

namespace syscrypto {
    pde::error::error(int ec) : 
        std::system_error(ec,  std::system_category())
    {}

    pde::error::error(int ec, const std::string& what) : 
        std::system_error(ec,  std::system_category(), what)
    {}

    pde::error::error(int ec, const char* what) : 
        std::system_error(ec,  std::system_category(), what)
    {}

    pd_bytes pde::protect_data(bytes_view data, encyption_scope s)
    {
        using namespace std::string_view_literals;
        return protect_data(data, bytes_view(), ""sv, s);
    }

    pd_bytes pde::protect_data(bytes_view data, std::string_view description, encyption_scope s)
    {
        using namespace std::string_view_literals;
        return protect_data(data, bytes_view(), description, s);
    }

    pd_bytes pde::protect_data(bytes_view data, bytes_view entropy_key, encyption_scope s)
    {
        using namespace std::string_view_literals;
        return protect_data(data, entropy_key, ""sv, s);
    }

    sec_bytes pde::unprotect_data(pd_bytes_view encrypted_data)
    {
        return unprotect_data(encrypted_data, bytes_view());
    }

}
